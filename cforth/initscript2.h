": FORGET WORD FIND DUP @ LATEST ! HERE ! ;\r"
        ": DUMP-WORDS 2DUP 1 - 15 AND 1 + BEGIN ?DUP WHILE SWAP DUP C@ 2 U.RZ SPACE 1 + SWAP 1 - REPEAT DROP ;\r"
        ": ASCII-LOOP BEGIN ?DUP WHILE SWAP DUP C@ DUP 32 128 WITHIN IF EMIT ELSE DROP 46 EMIT THEN 1 + SWAP 1 - REPEAT ; \r"
        ": DUMP-ASCII 2DUP 1 - 15 AND 1 + ASCII-LOOP DROP ;\r"
        ": DUMP-TAIL DUP 1 - 15 AND 1 + TUCK - >R + R> ; \r"
        ": HEXUD. HEX SWAP DUP 0= IF DROP ELSE U. 8 EMIT THEN DUP UDIGITS 4 SWAP - DUP 0> IF 0 DO 30 EMIT LOOP ELSE DROP THEN U. ; \r"
        ": HEXUDIGITS SWAP DUP 0= IF DROP UDIGITS ELSE UDIGITS 4 + NIP THEN ; \r"
        ": HEXUD.R HEX -ROT 2DUP HEXUDIGITS >R ROT R> - SPACES HEXUD. 8 EMIT ;\r"
        ": DUMP CR BASE @ -ROT HEX BEGIN ?DUP WHILE OVER 4 U.R 58 EMIT SPACE DUMP-WORDS DUMP-ASCII CR DUMP-TAIL REPEAT DROP BASE ! ;\r"
        ": ?2DUP 2DUP D0= IF ELSE 2DUP THEN ;\r"
        ": D! TUCK ! CELL + ! ;\r"
        ": D@ DUP CELL + @ SWAP @ ;\r"
        " 2VARIABLE SDUMP-ADDR \r"
        " 2VARIABLE SDUMP-ADDR2 \r"
        " VARIABLE RBASE \r"
        ": SDUMP-ADDRLINE SDUMP-ADDR D@ 6 HEXUD.R 58 EMIT SPACE DUP 1 - 15 AND 1+ ;\r"
        ": SASCII-EMIT DUP 32 128 WITHIN IF EMIT ELSE DROP 46 EMIT THEN ; \r"
        ": SASCII-LOOP BEGIN ?DUP WHILE SDUMP-ADDR2 D@ 2DUP SYSC@ SASCII-EMIT 1. D+ SDUMP-ADDR2 D! 1- REPEAT ; \r"
        ": SDUMP-BYTES BEGIN ?DUP WHILE SDUMP-ADDR D@ 2DUP SYSC@ 2 U.RZ SPACE 1. D+ SDUMP-ADDR D! 1- REPEAT ; \r"
        ": SDUMP-ASCII DUP 1 - 15 AND 1 + SASCII-LOOP ;\r"
        ": SDUMP-TAIL DUP 1 - 15 AND 1 + TUCK - >R + R> ; \r"
        ": SDUMP-PRELUDE  >R 2DUP SDUMP-ADDR D! SDUMP-ADDR2 D! R> BASE @ RBASE ! HEX ; \r"
        ": SDUMP CR SDUMP-PRELUDE BEGIN ?DUP WHILE SDUMP-ADDRLINE SDUMP-BYTES SDUMP-ASCII CR DUP 1- 15 AND 1+ -  REPEAT RBASE @ BASE ! ; \r"
        ": ALIGNED16 15 + 15 INVERT AND ;\r"
        ": SDUMP ALIGNED16 SDUMP ; \r"
        ": DUMP ALIGNED16 DUMP ; \r"
        ": CASE 0 ; IMMEDIATE \r"
        ": OF ' OVER , ' = , [COMPILE] IF ' DROP , ; IMMEDIATE \r"
        ": ENDOF [COMPILE] ELSE ; IMMEDIATE \r"
        ": ENDCASE ' DROP , BEGIN ?DUP WHILE [COMPILE] THEN REPEAT ; IMMEDIATE \r"
        ": CFA> LATEST @ BEGIN ?DUP WHILE 2DUP SWAP < IF NIP EXIT THEN @ REPEAT DROP 0 ; \r"
        ": SHUTDOWN LIT 1 243 PC! ;\r"
        " 1056 CONSTANT TARGET\r"
        " 1060 CONSTANT DRIVE\r"
        " 1064 CONSTANT SECTOR\r"
        " 1068 CONSTANT OPERATION\r"
        " 0 CONSTANT WRITE \r"
        " 1 CONSTANT READ \r"
        ": A: 0 DRIVE P! ;\r"
        ": B: 1 DRIVE P! ;\r"
        ": C: ( 2 DRIVE P! ) .\" TODO: IMPLEMENT HCS DRIVER\" ;\r"
        ": SETUP TARGET P! 1 - SECTOR P! ;\r"
        ": PUTIT SETUP WRITE OPERATION P! DISK/IO ;\r"
        ": GETIT SETUP READ OPERATION P! DISK/IO TARGET P@ ;\r"
        ": BLOCK RESIDENT IF BUFFER GETIT ELSE SWAP DROP THEN ;\r"
        " HEX \r"
        ": TMPBLOCK DUP BLOCK SWAP 7FFF AND 8 0 DO DUP I 2 CELLS * SBUF + DUP @ ROT = IF 0 SWAP ! ELSE DROP THEN LOOP DROP ;\r"
        ": SAVE DUP 8000 AND IF 7FFF AND OVER CELL + @ PUTIT ELSE DROP THEN ;\r"
        ": SAVE 8 0 DO I 2 CELLS * SBUF + DUP @ SAVE 0 SWAP ! LOOP ;\r"
        ": ZBUF 8 0 DO 0 I 2 CELLS * SBUF + ! LOOP ;\r"
        " DECIMAL \r"
        " 1072 CONSTANT SCRN"
        " 1076 CONSTANT LINE"
        " 1080 CONSTANT SCRNOFF\r"
        " 1084 CONSTANT SEPARATOR\r"
        ": LOAD SCRN P! 0 LINE P! ;\r"
        ": LIST CR 1+ SWAP DO I 2* 1+ TMPBLOCK I 3 .R 58 EMIT SPACE 64 TYPE CR LOOP ;\r"
        " VARIABLE LNS\r"
        ": TYPE-ESCAPE 0 DO DUP C@ DUP 32 < IF 170 + EMIT ELSE EMIT THEN 1 + LOOP DROP ;\r"
        ": LINENO LNS @ + 3 .R 58 EMIT SPACE ; \r"
        ": SHOWC DO I LINENO DUP 64 I * + 64 TYPE-ESCAPE CR LOOP DROP ;\r"
        ": SHOW CR 2* 1+ DUP TMPBLOCK 0 LNS ! 8 0 SHOWC 8 LNS ! 1+ TMPBLOCK 8 0 SHOWC ;\r"
        " VARIABLE SCRN0 4 CELLS ALLOT\r"
        " VARIABLE SCREEN\r"
        " -1 SCRN0 !\r"
        " -1 SCRN0 CELL + !\r"
        " -1 SCRN0 2 CELLS + !\r"
        " -1 SCRN0 3 CELLS + !\r"
        " HEX\r"
        ": TEST-SCRN -1 SCREEN ! DUP SCRN0 @ = IF F000 SCREEN ! THEN ;\r"
        ": TEST-SCRN TEST-SCRN DUP SCRN0 CELL + @ = IF F400 SCREEN ! THEN ;\r"
        ": TEST-SCRN TEST-SCRN DUP SCRN0 2 CELLS + @ = IF F800 SCREEN ! THEN ;\r"
        ": TEST-SCRN TEST-SCRN SCRN0 3 CELLS + @ = IF FC00 SCREEN ! THEN ;\r"
        ": GETSCREEN SCRN P@ 2* 1+ 2BUFFER GETIT -ROT GETIT DROP ;\r"
        ": UPDATE-SCRN SCRN P@ SCREEN @ F000 - 400 / CELLS SCRN0 + ! ;\r"
        ": CLOSE-SCRN -1 SCREEN @ F000 - 400 / CELLS SCRN0 + ! ;\r"
        ": OPEN DUP SCRN P! TEST-SCRN SCREEN @ -1 = IF GETSCREEN SCREEN ! THEN UPDATE-SCRN ;\r"
        ": CLOSE DUP SCRN P! TEST-SCRN SCREEN @ -1 = IF .\" Screen not open\" CR THEN CLOSE-SCRN ;\r"
        ": WRITE 2* 1+ DUP SCREEN @ PUTIT 1+ SCREEN @ 200 + PUTIT ;\r"
        ": SHOWC CR SCREEN @ DUP 0 LNS ! 8 0 SHOWC 8 LNS ! 200 + 8 0 SHOWC ;\r"
        "DECIMAL \r"
        ": EDITOR 1 LOAD ;\r"
        ": HELP .\" IF GARBAGE, INSERT SYSTEM DISK\" 0 SHOW ;\r"
